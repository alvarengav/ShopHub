services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  orderservice:
    image: ${DOCKER_REGISTRY-}orderservice
    build:
      context: .
      dockerfile: src/OrderService/OrderService.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__Host=rabbitmq
    ports:
      - '5001:80'
    depends_on:
      - rabbitmq
    restart: on-failure

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: src/UserService/UserService.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__Host=rabbitmq
    ports:
      - '5002:80'
    depends_on:
      - rabbitmq
    restart: on-failure

  notificationservice:
    image: ${DOCKER_REGISTRY-}notificationservice
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__Host=rabbitmq
    ports:
      - '5003:80'
    depends_on:
      - rabbitmq
    restart: on-failure

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: src/ApiGateway/Dockerfile
    ports:
      - '8080:8080'
      # - '8081:8081'
    depends_on:
      - orderservice
      - userservice
    restart: on-failure
    volumes:
      - ${USERPROFILE}/.aspnet/https:/https/
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
      # ASPNETCORE_HTTPs_PORTS: 8081
      # ASPNETCORE_Kestrel__Certificates__Default__Password: develop
      # ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
